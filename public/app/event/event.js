angular.module("main").controller("eventController",["$scope","$http","appFactory","$state",function($scope,$http,appFactory,$state){$scope.event={},$scope.event.messages=[],$scope.event.hostMessages=[],$scope.event["private"]=!0,$scope.event.allowedUsers={},$scope.event.showEvent=!1,$scope.participants={},$scope.adminTabMessage="",$scope.invitedUser="",$scope.userText="",$scope.chatVisible=!0,$scope.isSameUser=!1,$scope.showCountDown=!0,$scope.initialized=!1,$scope.selectedChat=[1,0,0],$scope.countDown="loading...",$scope.deleteEvent=!1;var elementsLoaded=!1,chatEl="",hostChatEl="",chatAlert="",alertActivated=!1,streamActivated=!1,ref=appFactory.firebase,userAuth=ref.getAuth(),userData="",chatRef="",eventRef=ref.child("events").child($scope.eventId),usernamesRef=ref.child("usernames");ref.child("users");$scope.deleteThisEvent=function(){ref.off(),eventRef.off(),chatRef.off(),chatRef.remove(),ref.child("events").child($scope.eventId).remove(),$state.go("home")},$scope.toggleDelete=function(){$scope.deleteEvent=!$scope.deleteEvent},$scope.showEvent=function(){return $scope.isSameUser||!$scope.event["private"]?$scope.event.showEvent=!0:$scope.event.followersOnly?appFactory.accessUserByUsername($scope.event.host,function(user){user=user.val(),void 0!==user.followers[userAuth.uid]&&appFactory.update($scope,function(scope){scope.event.showEvent=!0})}):$scope.event.allowedUsers[userData.username]&&appFactory.update($scope,function(scope){scope.event.showEvent=!0}),!1},$scope.eventStatus=function(){return $scope.event["private"]?"This event is private":"This event is public"},$scope.addToWhiteList=function(){var user=this.invitedUser.replace(/[\#\$\[\]\.]/g,"");0!==user.length&&($scope.event.allowedUsers[user]?appFactory.update($scope,function(scope){scope.adminTabMessage='Username "'+user+'" is already invited'}):usernamesRef.child(user).on("value",function(info){var data=info.val();null===data?appFactory.update($scope,function(scope){scope.adminTabMessage='Username "'+user+'" does not exist'}):(eventRef.child("allowedUsers").child(info.key()).set(!0),appFactory.sendNotification(data.uid,{messageType:"Event",message:"You have been added to event '"+$scope.event.name+"' by "+$scope.event.host,url:["event",$scope.eventId],sender:"Linelevel Bot",subject:"You have received an event invitation!",startDate:$scope.event.date}),appFactory.update($scope,function(scope){scope.adminTabMessage="Invitation sent to "+user})),usernamesRef.off()}),this.invitedUser="")},$scope.removeUserFromWhiteList=function(username){appFactory.accessUidByUsername(username,function(uid){appFactory.sendNotification(uid,{messageType:"Event",message:"You have been removed from event '"+$scope.event.name+"'",url:["userProfile",$scope.event.host],sender:"Linelevel Bot",subject:"Removed from Event"})}),eventRef.child("allowedUsers").child(username).remove(),delete $scope.event.allowedUsers[username]};var updateParticipant=function(){appFactory.updateEventParticipation($scope),appFactory.timers.participantCounter=setTimeout(updateParticipant,2e4)};if($scope.showParticipant=function(input){return input>(new Date).getTime()-4e4},userAuth){var userRef=ref.child("users").child(userAuth.uid);userRef.on("value",function(user){userData=user.val()}),userRef.update({lastSessionId:$scope.eventId})}eventRef.on("value",function(info){var eventData=info.val();appFactory.update($scope,function(scope){$scope.event.host=eventData.host,$scope.event.name=eventData.title,$scope.event.videoId=eventData.videoId,$scope.event.genres=eventData.genre,$scope.event.date=eventData.date,$scope.event["private"]=eventData["private"],$scope.event.followersOnly=eventData.followersOnly,$scope.isSameUser=userData.username===$scope.event.host||$scope.event.host===appFactory.user?!0:!1})}),eventRef.child("allowedUsers").on("child_added",function(a){appFactory.update($scope,function(scope){scope.event.allowedUsers[a.key()]=a.val()})});var init=function(){$scope.initialized||(ref.off(),setTimeout(function(){alertActivated=!0},1500),eventRef.child("participants").on("child_added",function(user){appFactory.update($scope,function(scope){scope.participants[user.key()]=user.val().lastKnownTime})}),eventRef.child("participants").on("child_changed",function(user){appFactory.update($scope,function(scope){scope.participants[user.key()]=user.val().lastKnownTime})}),eventRef.child("participants").on("child_removed",function(user){appFactory.update($scope,function(scope){delete scope.participants[user.key()]})}),eventRef.child("videoId").on("value",function(snapshot){console.log("videoId listener",snapshot.val()),$scope.event.videoId=snapshot.val().videoId,setTimeout(function(){$scope.isSameUser!==!0&&($scope.loadStream(),console.log("loading stream for videoId",$scope.event.videoId))},2e3)}),chatRef=ref.child("chats").child($scope.eventId),chatRef.limitToLast(50).on("child_added",function(message){message=message.val(),appFactory.update($scope,function(scope){scope.event.messages.push(message),alertActivated&&userData.username!==message.username&&chatAlert.play(),message.username===scope.event.host&&scope.event.hostMessages.push(message)})}),$scope.initialized=!0)},loadElements=function(){chatEl=document.getElementById("chatMessages"),hostChatEl=document.getElementById("hostMessages"),chatAlert=document.createElement("audio"),chatAlert.setAttribute("src","../../assets/alert.wav"),null===chatEl||null===hostChatEl?setTimeout(loadElements,30):elementsLoaded=!0},updateSameUserStatus=function(){void 0===userData.username||null===appFactory.userName?(console.log("repeat"),setTimeout(updateSameUserStatus,300)):(appFactory.update($scope,function(scope){scope.isSameUser=userData.username===scope.event.host||scope.event.host===appFactory.userName}),init())};updateSameUserStatus(),$scope.$watch(function(scope){return $scope.event.showEvent},function(nv,ov){nv&&(init(),loadElements())}),$scope.$watch(function(scope){return scope.initialized},function(nv,ov){nv&&(appFactory.resetTimers(),updateCountDown(),updateParticipant(),$scope.$watch(function(scope){return scope.event.messages.length},function(a,b){elementsLoaded&&$scope.scrollToBottom()}))}),$scope.isHost=function(input){return $scope.event.host===input.username},$scope.isUser=function(input){return userData.username===input.username};var updateCountDown=function(){var current=(new Date).getTime(),message="Updating...";if(current>$scope.event.date&&void 0!==$scope.event.date)message="Event ended on "+new Date($scope.event.date).toDateString();else if(void 0!==$scope.event.date){var timeLeft=$scope.event.date-current,days=Math.floor(timeLeft/864e5);timeLeft%=864e5;var hours=Math.floor(timeLeft/36e5);timeLeft%=36e5;var minutes=Math.floor(timeLeft/6e4);timeLeft=Math.floor(timeLeft%6e4/1e3),days=days>0?1===days?days+" day ":days+" days ":"",hours=hours>0?1===hours?hours+" hour ":hours+" hours ":"",minutes=minutes>0?1===minutes?minutes+" minute ":minutes+" minutes and ":"",timeLeft=1===timeLeft?timeLeft+" second":timeLeft+" seconds",message="Event begins in "+days+hours+minutes+timeLeft}appFactory.update($scope,function(scope){scope.countDown=message}),appFactory.timers.eventCounter=setTimeout(updateCountDown,1e3)},hideCountDown=function(){streamActivated||(streamActivated=!0,appFactory.update($scope,function(scope){scope.showCountDown=!1}))};$scope.selectTab=function(num){$scope.selectedChat=[0,0],$scope.selectedChat[num]=1,$scope.scrollToBottom()},$scope.scrollToBottom=function(){setTimeout(function(){chatEl.scrollTop=chatEl.scrollHeight,hostChatEl.scrollTop=hostChatEl.scrollHeight},30)},$scope.chatTime=function(time){var gap=new Date-new Date(time),prefix="",days=Math.floor(gap/864e5);if(days>0){switch(days){case 1:prefix+="1 day ago";break;default:prefix+=days+" days ago"}return prefix}var hours=Math.floor(gap/36e5),minutes=Math.floor(gap/6e4);return hours?1===hours?"an hour ago":""+hours+" hours ago":1===minutes?"a minute ago":minutes>1?minutes+" minutes ago":"less than a minute ago"},$scope.sendMessage=function(){var text=this.userText;userData&&$scope.initialized&&text.length>0?chatRef.push({username:userData.username,message:text,timestamp:(new Date).getTime()}):$scope.event.messages.push({username:"Linelevel Bot",message:"Please log in to participate in chat!"}),this.userText=""},$scope.$watch("$scope.event.videoId",function(a,b){$scope.isSameUser!==!0&&$scope.loadStream()}),$scope.startStream=function(){hideCountDown();var peer=new Peer({key:"66p1hdx8j2lnmi",debug:3,config:{iceServers:[{url:"stun:stun.l.google.com:19302"},{url:"stun:stun1.l.google.com:19302"}]}});peer.on("open",function(){ref.child("events").child($scope.eventId).update({videoId:peer.id})}),peer.on("connection",function(conn){conn.on("open",function(){peer.call(conn.peer,window.localStream)})}),navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.getUserMedia({audio:!0,video:!0},function(stream){var video=document.getElementById("myVideo");video.src=URL.createObjectURL(stream),video.muted=!1,window.localStream=stream},function(error){console.log(error)})},$scope.loadStream=function(){var peer=new Peer({key:"66p1hdx8j2lnmi"});peer.connect($scope.event.videoId);peer.on("call",function(incomingCall){hideCountDown(),incomingCall.answer(null),incomingCall.on("stream",function(stream){var video=document.getElementById("theirVideo");video.src=URL.createObjectURL(stream),video.muted=!1})})},$scope.stopStream=function(){window.localStream&&window.localStream.stop()},$scope.$watch("$scope.event.videoId",function(a,b){$scope.isSameUser!==!0&&$scope.loadStream()}),$scope.editEvent=function(){$state.go("editevent",{eventId:$scope.eventId})},$scope.play=function(){var peer=new Peer({key:"66p1hdx8j2lnmi"});peer.connect($scope.event.videoId);peer.on("call",function(incomingCall){hideCountDown(),incomingCall.answer(null),incomingCall.on("stream",function(stream){var video=document.getElementById("theirVideo");video.src=URL.createObjectURL(stream),video.muted=!1})})},$scope.stop=function(isAdmin){isAdmin?window.localStream.stop():document.getElementById("theirVideo").pause()},$scope.volumeUp=function(){document.getElementById("theirVideo").volume<1&&(document.getElementById("theirVideo").volume+=.1)},$scope.volumeDown=function(){document.getElementById("theirVideo").volume>0&&(document.getElementById("theirVideo").volume-=.1)},$scope.mute=function(){document.getElementById("theirVideo").muted=!document.getElementById("theirVideo").muted},$scope.toggleChat=function(){$scope.chatVisible=!$scope.chatVisible},$scope.people=function(){"hidden"===document.getElementsByClassName("chat-participants")[0].style.visibility?document.getElementsByClassName("chat-participants")[0].style.visibility="visible":document.getElementsByClassName("chat-participants")[0].style.visibility="hidden"}}]);